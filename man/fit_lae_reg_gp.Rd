% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_lae_reg_gp.R
\name{fit_lae_reg_gp}
\alias{fit_lae_reg_gp}
\title{Fit Gaussian process regression with local anchor embedding kernels}
\usage{
fit_lae_reg_gp(
  X,
  Y,
  X_new,
  s,
  r,
  K = NULL,
  approach = "posterior",
  cl = NULL,
  models = list(subsample = "kmeans", kernel = "lae", gl = "rw", root = FALSE)
)
}
\arguments{
\item{X}{Training sample, a (m, d) matrix, each row indicates one point in R^d.}

\item{Y}{A numeric vector with length(m), response vector.}

\item{X_new}{Testing sample, a (n-m, d) matrix, each row indicates one point in R^d.}

\item{s}{An integer indicating the number of the subsampling.}

\item{r}{An integer, the number of the nearest neighbor points.}

\item{K}{An integer, the number of used eigenpairs to construct heat kernel,
the defaulting value is \code{NULL}, that is, \code{K=s}.}

\item{approach}{A character vector, taking value in c("posterior", "marginal"),
decides which objective function to be optimized, defaulting value is \code{posterior}.}

\item{cl}{The cluster to make parallel computing,
typically generated by \code{parallel::makeCluster(num_workers)}.
The defaulting value of cl is NULL, that is, sequential computing.}

\item{models}{A list with four components
\describe{
\item{subsample}{the method of subsampling, the defaulting value is \code{kmeans}.}
\item{kernel}{the type of kernel to compute cross similarity matrix W, the
defaulting value is \code{lae}.}
\item{gl}{the kind of graph Laplacian L, the defaulting value is \code{rw}.}
\item{root}{whether to square root eigenvalues of the two steps similarity matrix W,
the defaulting value is \code{FALSE}.}
}}
}
\value{
\code{Y_pred} A numeric vector with length(m_new), predictive response vector.
}
\description{
Fit Gaussian process regression with local anchor embedding kernels
}
\examples{
X <- matrix(rnorm(3*3), 3, 3)
Y <- rowSums(X)
X_new <- matrix(rnorm(10*3),10,3)
Y_new <- rowSums(X_new)
s <- 5; r <- 3
K <- 3
Y_pred = fit_lae_reg_gp(X, Y, X_new, s, r, K)
}
