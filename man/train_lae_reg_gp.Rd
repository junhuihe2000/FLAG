% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/train_lae_reg_gp.R
\name{train_lae_reg_gp}
\alias{train_lae_reg_gp}
\title{Learn hyper-parameters by maximizing log marginal likelihood or log posterior}
\usage{
train_lae_reg_gp(
  eigenpair,
  Y,
  K,
  approach = "posterior",
  theta0 = NULL,
  lower = c(0.001, 0.001),
  upper = c(100, Inf)
)
}
\arguments{
\item{eigenpair}{A list includes values and vectors.}

\item{Y}{A numeric vector with length(m), response vector.}

\item{K}{An integer, the number of used eigenpairs.}

\item{approach}{A character vector, taking value in c("posterior", "marginal"),
decides which objective function to be optimized, defaulting value is \code{posterior}.}

\item{theta0}{The initial guess for theta, defaulting value \code{c(10,1)}.}

\item{lower}{the lower bound on theta, defaulting value \code{c(1e-3,1e-3)}.}

\item{upper}{the upper bound on theta, defaulting value \code{c(100,Inf)}.}
}
\value{
A list with two components
\describe{
\item{theta}{the optimal hyper-parameters.}
\item{obj}{the corresponding optimal objective function value.}
}
}
\description{
Learn hyper-parameters by maximizing log marginal likelihood or log posterior
}
\examples{
X <- matrix(rnorm(3*3), 3, 3)
Y <- rowSums(X)
X_new <- matrix(rnorm(10*3),10,3)
s <- 5; r <- 3
m <- 3; K <- 3
eigenpair <- heat_kernel_spectrum(X, X_new, s, r, K=K)
train_lae_reg_gp(eigenpair, Y, K)
}
